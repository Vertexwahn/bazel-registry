diff --git a/BUILD.bazel b/BUILD.bazel
new file mode 100644
index 0000000..778ac9b
--- /dev/null
+++ b/BUILD.bazel
@@ -0,0 +1,25 @@
+# Hey there! Before you start modifying this file, go check out https://github.com/dynacondev/boost.rules.tools for the tool you need!
+
+load("@boost.rules.tools//:tools.bzl", "boost_library")
+
+boost_library(
+    name = "contract",
+    deps = [
+        "@boost//:any",
+        "@boost//:assert",
+        "@boost//:config",
+        "@boost//:core",
+        "@boost//:exception",
+        "@boost//:function",
+        "@boost//:function_types",
+        "@boost//:mpl",
+        "@boost//:optional",
+        "@boost//:preprocessor",
+        "@boost//:smart_ptr",
+        "@boost//:static_assert",
+        "@boost//:thread",
+        "@boost//:type_traits",
+        "@boost//:typeof",
+        "@boost//:utility",
+    ],
+)
diff --git a/MODULE.bazel b/MODULE.bazel
new file mode 100755
index 0000000..4f8d440
--- /dev/null
+++ b/MODULE.bazel
@@ -0,0 +1,14 @@
+"""
+Hey there! Before editing, check out the tool at https://github.com/dynacondev/boost.rules.tools
+Note: These modules follow a circular dependency structure on the boost module https://github.com/dynacondev/boost.rules to keep boost releases from mixing!
+"""
+
+module(
+    name = "boost.contract",
+    version = "1.83.0.bcr.1",
+    compatibility_level = 1,
+)
+
+bazel_dep(name = "boost", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.rules.tools", version = "1.0.0")
+bazel_dep(name = "platforms", version = "0.0.8")
diff --git a/WORKSPACE.bazel b/WORKSPACE.bazel
new file mode 100644
index 0000000..be0754f
--- /dev/null
+++ b/WORKSPACE.bazel
@@ -0,0 +1 @@
+# SEE: MODULE.bazel
diff --git a/test/BUILD.bazel b/test/BUILD.bazel
new file mode 100644
index 0000000..c5625de
--- /dev/null
+++ b/test/BUILD.bazel
@@ -0,0 +1,43 @@
+load("@boost.rules.tools//:tools.bzl", "boost_test_set")
+
+DEPS = [
+    "@boost//:contract",
+    "@boost//:iostreams",
+]
+
+test_suite(
+    name = "tests",
+    tests = boost_test_set(
+        negative_test_names = [
+            "check/axiom_error",
+            "check/audit_error",
+            "check/audit_disabled_error",
+            "disable/audit_disabled_error",
+            "disable/audit_error",
+            "disable/axiom_error",
+            "invariant/mutable_error",
+            "invariant/static_const_error",
+            "invariant/static_cv_error",
+            "invariant/static_error",
+            "invariant/static_mutable_error",
+            "invariant/static_volatile_error",
+            "invariant/volatile_error",
+            "old/no_make_old_if_copyable_error",
+            "old/no_make_old_error",
+            "old/if_copyable_error",
+            "result/type_mismatch_error",
+            "specify/auto_error",
+            "specify/auto_pre_error",
+            "specify/auto_pre_old_error",
+            "specify/auto_pre_old_post_error",
+            "specify/auto_pre_old_post_except_error",
+            "specify/except_old_error",
+            "specify/except_post_error",
+            "specify/except_pre_error",
+            "specify/old_pre_error",
+            "specify/post_old_error",
+            "specify/post_pre_error",
+        ],
+        deps = DEPS,
+    ),
+)
