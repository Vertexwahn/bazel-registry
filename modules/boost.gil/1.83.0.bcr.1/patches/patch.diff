diff --git a/.gitignore b/.gitignore
index f16ee33..8243eb1 100644
--- a/.gitignore
+++ b/.gitignore
@@ -21,7 +21,7 @@ out
 /.clang-format
 
 # CMake
-/*build*
+build/
 /cmake-build-debug/
 /cmake-build-release/
 /CMakeSettings.json
diff --git a/BUILD.bazel b/BUILD.bazel
new file mode 100644
index 0000000..c409530
--- /dev/null
+++ b/BUILD.bazel
@@ -0,0 +1,21 @@
+# Hey there! Before you start modifying this file, go check out https://github.com/dynacondev/boost.rules.tools for the tool you need!
+
+load("@boost.rules.tools//:tools.bzl", "boost_library")
+
+boost_library(
+    name = "gil",
+    deps = [
+        "@boost//:assert",
+        "@boost//:concept_check",
+        "@boost//:config",
+        "@boost//:container_hash",
+        "@boost//:core",
+        "@boost//:filesystem",
+        "@boost//:integer",
+        "@boost//:iterator",
+        "@boost//:mp11",
+        "@boost//:preprocessor",
+        "@boost//:type_traits",
+        "@boost//:variant2",
+    ],
+)
diff --git a/MODULE.bazel b/MODULE.bazel
new file mode 100755
index 0000000..9c062fa
--- /dev/null
+++ b/MODULE.bazel
@@ -0,0 +1,14 @@
+"""
+Hey there! Before editing, check out the tool at https://github.com/dynacondev/boost.rules.tools
+Note: These modules follow a circular dependency structure on the boost module https://github.com/dynacondev/boost.rules to keep boost releases from mixing!
+"""
+
+module(
+    name = "boost.gil",
+    version = "1.83.0.bcr.1",
+    compatibility_level = 1,
+)
+
+bazel_dep(name = "boost", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.rules.tools", version = "1.0.0")
+bazel_dep(name = "platforms", version = "0.0.8")
diff --git a/WORKSPACE.bazel b/WORKSPACE.bazel
new file mode 100644
index 0000000..be0754f
--- /dev/null
+++ b/WORKSPACE.bazel
@@ -0,0 +1 @@
+# SEE: MODULE.bazel
diff --git a/test/BUILD.bazel b/test/BUILD.bazel
new file mode 100644
index 0000000..5e57135
--- /dev/null
+++ b/test/BUILD.bazel
@@ -0,0 +1,25 @@
+load("@boost.rules.tools//:tools.bzl", "boost_test_set")
+
+DEPS = [
+    "@boost//:gil",
+]
+
+test_suite(
+    name = "tests",
+    tests = boost_test_set(
+        srcs = glob(
+            ["**/*.h"],
+        ),
+        data = glob(["extensions/io/images/**"]),
+        includes = ["extension/io"],
+        negative_test_names = [
+            "core/color/default_color_converter_impl_fail",
+            "core/color_base/static_transform_gray_to_rgb_fail",
+            "core/color_base/static_transform_rgb_to_cmyk_fail",
+            "core/image_processing/kernel_1d_fixed_even_size_fail",
+            "core/image_processing/threshold_color_spaces_not_compatible_fail",
+            "core/point/multiply_by_non_arithmetic_fail",
+        ],
+        deps = DEPS,
+    ),
+)
