diff --git a/BUILD.bazel b/BUILD.bazel
new file mode 100644
index 0000000..43f8375
--- /dev/null
+++ b/BUILD.bazel
@@ -0,0 +1,27 @@
+# Hey there! Before you start modifying this file, go check out https://github.com/dynacondev/boost.rules.tools for the tool you need!
+
+load("@boost.rules.tools//:tools.bzl", "boost_library")
+
+boost_library(
+    name = "date_time",
+    srcs = [
+        "src/gregorian/greg_month.cpp", # Not sure why we need this, but it"s in the boost cmakelists.txt
+    ],
+    deps = [
+        "@boost//:algorithm",
+        "@boost//:assert",
+        "@boost//:config",
+        "@boost//:core",
+        "@boost//:io",
+        "@boost//:lexical_cast",
+        "@boost//:numeric.conversion",
+        "@boost//:range",
+        "@boost//:smart_ptr",
+        "@boost//:static_assert",
+        "@boost//:throw_exception",
+        "@boost//:tokenizer",
+        "@boost//:type_traits",
+        "@boost//:utility",
+        "@boost//:winapi",
+    ],
+)
diff --git a/MODULE.bazel b/MODULE.bazel
new file mode 100755
index 0000000..6d7cf1e
--- /dev/null
+++ b/MODULE.bazel
@@ -0,0 +1,17 @@
+"""
+Hey there! Before editing, check out the tool at https://github.com/dynacondev/boost.rules.tools
+Note: These modules follow a circular dependency structure on the boost module https://github.com/dynacondev/boost.rules to keep boost releases from mixing!
+"""
+
+module(
+    name = "boost.date_time",
+    version = "1.83.0.bcr.1",
+    compatibility_level = 1,
+)
+
+bazel_dep(name = "boost", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.rules.tools", version = "1.0.0")
+bazel_dep(name = "platforms", version = "0.0.8")
+
+# Required for tests only
+bazel_dep(name = "boost.serialization", version = "1.83.0.bcr.1")
diff --git a/WORKSPACE.bazel b/WORKSPACE.bazel
new file mode 100644
index 0000000..be0754f
--- /dev/null
+++ b/WORKSPACE.bazel
@@ -0,0 +1 @@
+# SEE: MODULE.bazel
diff --git a/test/BUILD.bazel b/test/BUILD.bazel
new file mode 100644
index 0000000..921ccca
--- /dev/null
+++ b/test/BUILD.bazel
@@ -0,0 +1,87 @@
+load("@boost.rules.tools//:tools.bzl", "boost_test_set")
+
+DEPS = [
+    "@boost//:date_time",
+    "@boost.serialization//:archive",
+]
+
+test_suite(
+    name = "tests",
+    tests = boost_test_set(
+        data = ["local_time/poorly_formed_zonespec.csv"],
+        names = [
+            "gregorian/testcurrent_day",
+            "gregorian/testdate_duration",
+            "gregorian/testdate_facet_new",
+            "gregorian/testdate_input_facet",
+            "gregorian/testdate_iterator",
+            "gregorian/testdate",
+            "gregorian/testfacet",
+            "gregorian/testformat_date_parser",
+            "gregorian/testformatters",
+            "gregorian/testgenerators",
+            "gregorian/testgreg_cal",
+            "gregorian/testgreg_day",
+            "gregorian/testgreg_durations",
+            "gregorian/testgreg_month",
+            "gregorian/testgreg_serialize",
+            "gregorian/testgreg_wstream",
+            "gregorian/testgreg_year",
+            "gregorian/testparse_date",
+            "gregorian/testperiod",
+            "local_time/testwposix_time_zone",
+            "local_time/testwcustom_time_zone",
+            "local_time/testtz_database",
+            "local_time/testposix_time_zone",
+            "local_time/testlocal_time",
+            "local_time/testlocal_time_period",
+            "local_time/testlocal_time_iterator",
+            "local_time/testlocal_time_facet",
+            "local_time/testlocal_time_input_facet",
+            "local_time/testdst_transition_day_rule",
+            "local_time/testcustom_time_zone",
+            "local_time/testclocks",
+            "posix_time/testc_local_adjustor",
+            "posix_time/testclock",
+            "posix_time/testdst_rules",
+            "posix_time/testduration",
+            "posix_time/testfiletime_functions",
+            "posix_time/testformatters",
+            "posix_time/testgreg_duration_operators",
+            "posix_time/testiterator",
+            "posix_time/testlocal_adjustor",
+            "posix_time/testmicrosec_time_clock",
+            "posix_time/testparse_time",
+            "posix_time/testperiod",
+            "posix_time/teststreams",
+            "posix_time/testtime_facet",
+            "posix_time/testtime_formatters",
+            "posix_time/testtime_input_facet",
+            "posix_time/testtime_period",
+            "posix_time/testtime_serialize_versioning",
+            "posix_time/testtime_serialize",
+            "posix_time/testtime_wstream",
+            "posix_time/testtime",
+            "self_contained_header",
+            "testconstrained_value",
+            "testfrom_facet",
+            "testgeneric_period",
+            "testgregorian_calendar",
+            "testint_adapter",
+            "testint64_range",
+            "testmisc",
+            "testtime_resolution_traits",
+            "testwrapping_int",
+        ],
+        deps = DEPS,
+    ) + boost_test_set(
+        expect_fail = True,
+        names = [
+            "posix_time/compile_fail/seconds_special_value",
+            "posix_time/compile_fail/millisec_special_value",
+            "posix_time/compile_fail/minutes_special_value",
+            "posix_time/compile_fail/hours_special_value",
+        ],
+        deps = DEPS,
+    ),
+)
