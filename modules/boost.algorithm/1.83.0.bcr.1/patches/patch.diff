diff --git a/BUILD.bazel b/BUILD.bazel
new file mode 100644
index 0000000..2404586
--- /dev/null
+++ b/BUILD.bazel
@@ -0,0 +1,26 @@
+# Hey there! Before you start modifying this file, go check out https://github.com/dynacondev/boost.rules.tools for the tool you need!
+
+load("@boost.rules.tools//:tools.bzl", "boost_library")
+
+boost_library(
+    name = "algorithm",
+    deps = [
+        "@boost//:array",
+        "@boost//:assert",
+        "@boost//:bind",
+        "@boost//:concept_check",
+        "@boost//:config",
+        "@boost//:core",
+        "@boost//:exception",
+        "@boost//:function",
+        "@boost//:iterator",
+        "@boost//:mpl",
+        "@boost//:range",
+        "@boost//:regex",
+        "@boost//:static_assert",
+        "@boost//:throw_exception",
+        "@boost//:tuple",
+        "@boost//:type_traits",
+        "@boost//:unordered",
+    ],
+)
diff --git a/MODULE.bazel b/MODULE.bazel
new file mode 100755
index 0000000..8e16d98
--- /dev/null
+++ b/MODULE.bazel
@@ -0,0 +1,14 @@
+"""
+Hey there! Before editing, check out the tool at https://github.com/dynacondev/boost.rules.tools
+Note: These modules follow a circular dependency structure on the boost module https://github.com/dynacondev/boost.rules to keep boost releases from mixing!
+"""
+
+module(
+    name = "boost.algorithm",
+    version = "1.83.0.bcr.1",
+    compatibility_level = 1,
+)
+
+bazel_dep(name = "boost", version = "1.83.0.bcr.1")
+bazel_dep(name = "boost.rules.tools", version = "1.0.0")
+bazel_dep(name = "platforms", version = "0.0.8")
diff --git a/WORKSPACE.bazel b/WORKSPACE.bazel
new file mode 100644
index 0000000..be0754f
--- /dev/null
+++ b/WORKSPACE.bazel
@@ -0,0 +1 @@
+# SEE: MODULE.bazel
diff --git a/test/BUILD.bazel b/test/BUILD.bazel
new file mode 100644
index 0000000..f5a2800
--- /dev/null
+++ b/test/BUILD.bazel
@@ -0,0 +1,70 @@
+load("@boost.rules.tools//:tools.bzl", "boost_test_set")
+
+DEPS = [
+    "@boost//:algorithm",
+    "@boost//:test",
+]
+
+test_suite(
+    name = "tests",
+    tests = boost_test_set(
+        data = glob(["search_test_data/**"]),
+        names = [
+            "all_of_test",
+            "any_of_test",
+            "apply_permutation_test",
+            "clamp_test",
+            "copy_if_test1",
+            "copy_n_test1",
+            "empty_search_test",
+            "equal_test",
+            "exclusive_scan_test",
+            "find_backward_test",
+            "find_if_not_test1",
+            "find_not_test",
+            "for_each_n_test",
+            "gather_test1",
+            "hex_test1",
+            "hex_test2",
+            "hex_test3",
+            "hex_test4",
+            "inclusive_scan_test",
+            "iota_test1",
+            "is_clamped_test",
+            "is_palindrome_test",
+            "is_partitioned_test1",
+            "is_partitioned_until_test",
+            "is_permutation_test1",
+            "mclow",
+            "mismatch_test",
+            "none_of_test",
+            "one_of_test",
+            "ordered_test",
+            "partition_copy_test1",
+            "partition_point_test1",
+            "partition_subrange_test",
+            "power_test",
+            "reduce_test",
+            "search_test1",
+            "search_test2",
+            "search_test3",
+            "search_test4",
+            "sort_subrange_test",
+            "transform_exclusive_scan_test",
+            "transform_inclusive_scan_test",
+            "transform_reduce_test",
+        ],
+        deps = DEPS,
+    ) + boost_test_set(
+        expect_fail = True,
+        names = [
+            "gather_fail1",
+            "hex_fail1",
+            "power_fail1",
+            "search_fail1",
+            "search_fail2",
+            "search_fail3",
+        ],
+        deps = DEPS,
+    ),
+)
